import { createApp, createRouter, defineEventHandler, toNodeListener, readBody } from "h3";
import { createServer } from "node:http";
import { Client, GatewayIntentBits, REST, EmbedBuilder, AttachmentBuilder } from 'discord.js';
import { DateTime } from "luxon";
import 'dotenv/config'
// import { commands } from './commands';

export const app = createApp();

const router = createRouter();
app.use(router);

const rest = new REST({ version: '10' }).setToken(process.env.TOKEN);
const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages] });
client.login(process.env.TOKEN);

router.post('/fingerpori', defineEventHandler( async event => {
    const body = await readBody(event)
    
    const formattedDate = DateTime.now().toFormat('dd_MM_yy');
    const channelid = body.channelid || '479199736776228865';
    const channel = await client.channels.fetch(channelid);

    const fingerpori = `http://fingerpori.org/wordpress/images/vwf${formattedDate}.gif`;

    const file = new AttachmentBuilder(fingerpori);

    channel.send({ files: [file] });

    return { message: {fingerpori: fingerpori} };
  }),
);

router.post('/roll', defineEventHandler( async event => {
    const body = await readBody(event)

    const dice = body.dice || 20;
    const channelid = body.channelid || '479199736776228865';
    const user = body.name || 'unknown';
    const hidden = body.hidden || false;

    const rolled = {dice: dice, result: Math.floor(Math.random() * dice) + 1};

    const parseMessage = (user, roll) => (`${user} heitti D${roll.dice} nopalla: ${roll.result}`);
    const channel = await client.channels.fetch(channelid);
    channel.send(parseMessage(user, rolled));


    return { message: parseMessage(user, rolled) };

  }),
);

createServer(toNodeListener(app)).listen(8000);
